# Orb Version 0.1.2

version: 2.1
description: >
  Excute Docker build via Artsy-managed Docker daemon with a Circle CI fallback

orbs:
  hokusai: artsy/hokusai@0.7.0

commands:
  setup-artsy-remote-docker:
    parameters:
      artsy_docker_host:
        type: string
      artsy_docker_port:
        type: integer
      artsy_s3_path_root:
        type: string
    steps:
      - run:
          name: Setup Artsy Remote Docker Connection
          command: |
            if [[ -n "$AWS_ACCESS_KEY_ID" && -n "$AWS_SECRET_ACCESS_KEY" ]]; then
              printf "%s Setting up remote docker connection...\n" "$(TZ=UTC date)"
              mkdir ~/.docker
              aws s3 cp s3://<< parameters.artsy_s3_path_root >>/ca.pem ~/.docker/ca.pem
              aws s3 cp s3://<< parameters.artsy_s3_path_root >>/cert.pem ~/.docker/cert.pem
              aws s3 cp s3://<< parameters.artsy_s3_path_root >>/key.pem ~/.docker/key.pem

              echo 'export DOCKER_HOST="tcp://<< parameters.artsy_docker_host >>:<< parameters.artsy_docker_port >>"' >> "$BASH_ENV"
              echo 'export DOCKER_TLS_VERIFY="1"' >> "$BASH_ENV"
              source "$BASH_ENV"

              printf "Checking remote docker connection...\n"
              if docker ps --last 1 --quiet; then
                printf "Remote docker connection established.\n"
              else
                printf "Remote docker daemon unavailable. Reverting back to Circle CI docker.\n"
                rm $BASH_ENV
                exit 0
              fi
            else
              printf "Required environment variables `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` unavailable. Reverting back to Circle CI docker.\n"
              exit 0
            fi

  build-image-via-artsy:
    steps:
      - run:
          name: Build & Push via Artsy Remote Docker Connection
          no_output_timeout: 15m
          command: |
            if test -f "$BASH_ENV"; then
              source $BASH_ENV

              printf "%s Building image...\n" "$(TZ=UTC date)"
              BUILD_TAG="$CIRCLE_SHA1" hokusai build
              printf "%s Image built.\n" "$(TZ=UTC date)"

              printf "%s Pushing image...\n" "$(TZ=UTC date)"
              hokusai registry push \
                --no-build \
                --local-tag="$CIRCLE_SHA1" \
                --tag="$CIRCLE_SHA1" \
                --overwrite \
                --skip-latest
              printf "%s Image pushed.\n" "$(TZ=UTC date)"

              printf "Skipping local docker build fallback...\n"
              circleci step halt
            else
              printf "Remote docker build unavailable. Reverting back to Circle CI docker.\n"
            fi

  build-image-via-circle:
    steps:
      - run:
          name: Build & Push via Circle CI Fallback
          no_output_timeout: 15m
          command: |
            printf "%s Building image...\n" "$(TZ=UTC date)"
            BUILD_TAG="$CIRCLE_SHA1" hokusai build
            printf "%s Image built.\n" "$(TZ=UTC date)"

            printf "%s Pushing image...\n" "$(TZ=UTC date)"
            hokusai registry push \
              --no-build \
              --local-tag="$CIRCLE_SHA1" \
              --tag="$CIRCLE_SHA1" \
              --overwrite \
              --skip-latest
            printf "%s Image pushed.\n" "$(TZ=UTC date)"

jobs:
  build:
    executor: hokusai/deploy
    parameters:
      artsy_docker_host:
        type: string
        default: docker.artsy.net
      artsy_docker_port:
        type: integer
        default: 2376
      artsy_s3_path_root:
        type: string
        default: artsy-citadel/docker
    steps:
      - add_ssh_keys
      - checkout
      - setup-artsy-remote-docker:
          artsy_docker_host: << parameters.artsy_docker_host >>
          artsy_docker_port: << parameters.artsy_docker_port >>
          artsy_s3_path_root: << parameters.artsy_s3_path_root >>
      - build-image-via-artsy
      - setup_remote_docker
      - build-image-via-circle
